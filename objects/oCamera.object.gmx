<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemyHeadTest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(CurrentView){
    case ViewPlatformer:
        if( Transition ) {
            var cEase = EaseInOut(TransitionExpnt-.5, 7, t); //That seven is the time it takes the camera to go back to the player, so it doesn't look too weird when it readjusts.  
            
            //var cEase = t/7;
            
            view_wview[Overworld] = ViewBattleW + DeltaPlatformerBattleW * cEase;
            view_hview[Overworld] = ViewBattleH + DeltaPlatformerBattleH * cEase;
            
            if( view_wview[Overworld] &gt;= ViewPlatformerW ) Transition = false;
            
            t++;
            
            //Camera smooth movement
            var Objectivex, Objectivey, CamereaFollowVel, DistanceToObjective;
            
            Objectivex = oPlayer.x;
            Objectivey = oPlayer.y;
            
            DistanceToObjective = distance_to_point( Objectivex, Objectivey );     
        
            CameraFollowVel = CameraFollowMinVel + CameraFollowAddSpeed(DistanceToObjective);
            
            x = Approach(x, Objectivex, sin(pi/4) * CameraFollowVel);
            y = Approach(y, Objectivey, sin(pi/4) * CameraFollowVel);
        
        } else {
            x = oPlayer.x;
            y = oPlayer.y;
        }
    break;
    case ViewBattle:
        if( Transition ) {
            cEase = EaseInOut(TransitionExpnt, TransitionTime*30, t);  
        
            view_wview[Overworld] = ViewPlatformerW - DeltaPlatformerBattleW * cEase;
            view_hview[Overworld] = ViewPlatformerH - DeltaPlatformerBattleH * cEase;
                      
            if( view_wview[Overworld] == ViewBattleW ) Transition = false;
            
            t++;
        }
        
        //Camera smooth movement
        var Objectivex, Objectivey, CamereaFollowVel, DistanceToObjective;

        Objectivex = oGame.BattleAreaL + oGame.BattleAreaW/2;
        Objectivey = oGame.BattleAreaT + oGame.BattleAreaH/2;
        
        DistanceToObjective = distance_to_point( Objectivex, Objectivey );     
        
        CameraFollowVel = CameraFollowMinVel + CameraFollowAddSpeed(DistanceToObjective);
        
        x = Approach(x, Objectivex, sin(pi/4) * CameraFollowVel);
        y = Approach(y, Objectivey, sin(pi/4) * CameraFollowVel);
       
    break;
    default:
    break;    
}

view_xview[Overworld] = x - view_wview[Overworld]/2;
view_yview[Overworld] = y - view_hview[Overworld]/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
