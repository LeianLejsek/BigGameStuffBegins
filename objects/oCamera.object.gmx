<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemyHeadTest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>FollowBattleAreaMinVel = .5;
FollowBattleAreaMinVelOffset = 3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        prevx = x;
        prevy = y;
switch(oGame.GameMode){
    case oGame.PLATFORMER:
        
        x = oPlayer.x;
        y = oPlayer.y;
        view_xview[ViewPlatformer] = x - ViewPlatformerW/2;
        view_yview[ViewPlatformer] = y - ViewPlatformerH/2;        
    break;
    case oGame.BATTLE:
        var BattleAreCenterx, BattleAreaCentery, FollowBattleAreaVel, FollowBattleAreaVelOffset, DistanceToCenter;

        BattleAreaCenterx = oGame.BattleAreaL + oGame.BattleAreaW/2;
        BattleAreaCentery = oGame.BattleAreaT + oGame.BattleAreaH/2;
        DistanceToCenter = distance_to_point( BattleAreaCenterx, BattleAreaCentery );
        
        FollowBattleAreaVelOffset = ( 9 * ( 2*DistanceToCenter + 9 ) ^ (7/2) ) / (3.2*10^4) ;       
        
        FollowBattleAreaVel = FollowBattleAreaMinVel + FollowBattleAreaVelOffset;
        
        x = Approach(x, BattleAreaCenterx, sin(pi/4) * FollowBattleAreaVel);
        y = Approach(y, BattleAreaCentery, sin(pi/4) * FollowBattleAreaVel);
/*    
        view_xview[ViewBattle] = x - ViewBattleW/2;
        view_yview[ViewBattle] = y - ViewBattleH/2;
*/
        view_xview[ViewPlatformer] = x - ViewPlatformerW/2;
        view_yview[ViewPlatformer] = y - ViewPlatformerH/2;        
        
    break;
    default:
    break;    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
//d3d_transform_set_translation( prevx-x, prevy-y, 0 );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
