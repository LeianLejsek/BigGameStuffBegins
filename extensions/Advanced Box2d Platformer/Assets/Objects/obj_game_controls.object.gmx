<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//This object handles player input
//key bindings should be changed in this object's step event

global.left_held=0
global.right_held=0
global.down_held=0
global.up_held=0
global.jump_pressed=0
global.jump_held=0
global.jump_released=0


// Gamepad setup
global.joy=0
global.joy_in_use=0
if gamepad_is_connected(0)// Checking for a gamepad
    {
    gamepad_set_axis_deadzone(0,0.5)//set deadzone
    global.joy=1// flag that we are indeed, using a joystick
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.joy_in_use=0
if global.joy=1
{
    joystick_controls()
    if global.joy_in_use=1{exit}
    // this gets joystick input, and if there was input this step, ends the step event to ingore keyboard input
}



//keyboard_input
global.jump_released=0
if keyboard_check(vk_left)
    {
    global.left_held=1
    }
else
    {
    global.left_held=0
    }

if keyboard_check(vk_right)
    {
    global.right_held=1
    }
else
    {
    global.right_held=0
    }
    
if keyboard_check(vk_up)
    {
    global.up_held=1
    }
else
    {
    global.up_held=0
    }
    
if keyboard_check(vk_down)
    {
    global.down_held=1
    }
else
    {
    global.down_held=0
    }
    
    
if keyboard_check_pressed(ord('Z'))
    {
    global.jump_pressed=1
    }
else
    {
    if keyboard_check(ord('Z'))
        {
        global.jump_pressed=0
        global.jump_held=1
        }
    else
        {
        global.jump_pressed=0
        global.jump_released=1
        global.jump_held=0
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//draw walls and outlines
with(obj_wall)
    {
    if wall=1 // this checks to make sure its a wall, not a box.
        {     // as boxes are parented to walls
        draw_sprite(spr_wall_outline,image_single,x,y)
        }
    }
with(obj_wall)
    {
    if wall=1
        {
        draw_sprite(sprite_index,image_single,x,y)
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
